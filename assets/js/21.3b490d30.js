(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{328:function(e,t,n){e.exports=n.p+"assets/img/1.6ceae986.png"},394:function(e,t,n){"use strict";n.r(t);var r=n(22),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"本页目录"}},[e._v("本页目录")]),e._v(" "),r("p"),r("div",{staticClass:"table-of-contents"},[r("ul",[r("li",[r("a",{attrs:{href:"#本页目录"}},[e._v("本页目录")])]),r("li",[r("a",{attrs:{href:"#什么是容器"}},[e._v("什么是容器")]),r("ul",[r("li",[r("a",{attrs:{href:"#官方"}},[e._v("官方")])]),r("li",[r("a",{attrs:{href:"#机翻"}},[e._v("机翻")])])])]),r("li",[r("a",{attrs:{href:"#什么是-docker"}},[e._v("什么是 Docker")]),r("ul",[r("li",[r("a",{attrs:{href:"#官方"}},[e._v("官方")])]),r("li",[r("a",{attrs:{href:"#机翻"}},[e._v("机翻")])])])]),r("li",[r("a",{attrs:{href:"#为什么会出现-docker"}},[e._v("为什么会出现 Docker")])]),r("li",[r("a",{attrs:{href:"#为什么使用-docker"}},[e._v("为什么使用 Docker")])]),r("li",[r("a",{attrs:{href:"#企业级应用"}},[e._v("企业级应用")])])])]),r("p"),e._v(" "),r("h2",{attrs:{id:"什么是容器"}},[e._v("什么是容器")]),e._v(" "),r("h3",{attrs:{id:"官方"}},[e._v("官方")]),e._v(" "),r("ul",[r("li",[e._v("A standardized unit of software")])]),e._v(" "),r("p",[r("strong",[e._v("Package Software into Standardized Units for Development, Shipment and Deployment")]),r("br"),e._v("\nA container is a standard unit of software that packages up code and all its dependencies so the application runs quickly and reliably from one computing environment to another. A Docker container image is a lightweight, standalone, executable package of software that includes everything needed to run an application: code, runtime, system tools, system libraries and settings.")]),e._v(" "),r("p",[e._v("Container images become containers at runtime and in the case of Docker containers - images become containers when they run on Docker Engine. Available for both Linux and Windows-based applications, containerized software will always run the same, regardless of the infrastructure. Containers isolate software from its environment and ensure that it works uniformly despite differences for instance between development and staging.")]),e._v(" "),r("p",[r("strong",[e._v("Docker containers that run on Docker Engine:")]),r("br"),e._v(" "),r("strong",[e._v("Standard")]),e._v(": Docker created the industry standard for containers, so they could be portable anywhere"),r("br"),e._v(" "),r("strong",[e._v("Lightweight")]),e._v(": Containers share the machine’s OS system kernel and therefore do not require an OS per application, driving higher server efficiencies and reducing server and licensing costs"),r("br"),e._v(" "),r("strong",[e._v("Secure")]),e._v(": Applications are safer in containers and Docker provides the strongest default isolation capabilities in the industry")]),e._v(" "),r("h3",{attrs:{id:"机翻"}},[e._v("机翻")]),e._v(" "),r("ul",[r("li",[e._v("软件的标准化单位")])]),e._v(" "),r("p",[r("strong",[e._v("将软件打包成标准单元，以便开发、装运和部署")]),r("br"),e._v("\n容器是一个标准的软件单元，它将代码及其所有依赖项打包，以便应用程序从一个计算环境快速可靠地运行到另一个计算环境。Docker容器映像是一个轻量级的、独立的、可执行的软件包，包含运行应用程序所需的一切：代码、运行时、系统工具、系统库和设置。")]),e._v(" "),r("p",[e._v("容器映像在运行时成为容器，在Docker容器的情况下，映像在Docker引擎上运行时成为容器。可用于基于Linux和Windows的应用程序，无论基础结构如何，容器化软件都将始终运行相同的程序。容器将软件与其环境隔离开来，并确保软件在开发和登台等方面存在差异的情况下统一工作。")]),e._v(" "),r("p",[r("strong",[e._v("在Docker引擎上运行的Docker容器：")]),r("br"),e._v(" "),r("strong",[e._v("标准")]),e._v("：Docker为容器创建了行业标准，因此它们可以在任何地方移植"),r("br"),e._v(" "),r("strong",[e._v("轻量级")]),e._v("：容器共享机器的操作系统内核，因此不需要每个应用程序都有一个操作系统，从而提高服务器效率并降低服务器和许可成本"),r("br"),e._v(" "),r("strong",[e._v("安全")]),e._v("：应用程序在容器中更安全，Docker提供业界最强大的默认隔离功能\n"),r("img",{attrs:{src:n(328),alt:"容器应用"}})]),e._v(" "),r("h2",{attrs:{id:"什么是-docker"}},[e._v("什么是 Docker")]),e._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("理念")]),e._v(" "),r("p",[r("strong",[e._v("Debug your app, not your environment")]),r("br"),e._v(" "),r("em",[r("strong",[e._v("Securely build, share and run any application, anywhere")])])])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://www.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker 官网"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的 Linux或Windows 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。")]),e._v(" "),r("h3",{attrs:{id:"官方-2"}},[e._v("官方")]),e._v(" "),r("p",[r("strong",[e._v("Accelerate modern application development and delivery")]),r("br"),e._v("\nDocker Enterprise is the industry-leading, standards-based container platform for rapid development and progressive delivery of modern applications. Only Docker delivers a consistent and secure desktop-to-cloud application pipeline to Kubernetes environments in any cloud, choice of tools and languages, and central point of collaboration that simplifies and streamlines processes across dev and ops.")]),e._v(" "),r("h3",{attrs:{id:"机翻-2"}},[e._v("机翻")]),e._v(" "),r("p",[r("strong",[e._v("加快现代应用开发和交付")]),r("br"),e._v("\nDocker Enterprise是业界领先的、基于标准的集装箱平台，用于快速发展和逐步交付现代应用。只有Docker在任何云中提供了一个一致且安全的桌面到云应用程序管道到Kubernetes环境，工具和语言的选择，以及简化和优化跨开发和操作过程的中心协作点。")]),e._v(" "),r("h2",{attrs:{id:"为什么会出现-docker"}},[e._v("为什么会出现 Docker")]),e._v(" "),r("p",[e._v("一款产品从开发到上线，从操作系统，到运行环境，再到应用配置。作为开发+运维之间的协助我们需要关心的问题很多，这也是很多互联网公司不得不面对的问题，\n特别是各种版本的迭代之后，不同版本环境的兼容，对运维人员都是考验。")]),e._v(" "),r("p",[e._v("Docker之所以发展如此迅速，是因为它给出了一个标准化的解决方案。解决了运行环境和配置问题，方便做持续集成并有助于整体发布。")]),e._v(" "),r("h2",{attrs:{id:"为什么使用-docker"}},[e._v("为什么使用 Docker")]),e._v(" "),r("ul",[r("li",[e._v("更轻量"),r("br"),e._v("\n基于容器的虚拟化，仅包含业务运行所需的 "),r("code",[e._v("runtime")]),e._v(" 环境，CentOS / Ubuntu 基础镜像仅 170M。")]),e._v(" "),r("li",[e._v("更高效\n"),r("ul",[r("li",[e._v("计算：轻量，无额外开销")]),e._v(" "),r("li",[e._v("存储：系统盘 aufs / dm / overlayfs，数据盘 volume")]),e._v(" "),r("li",[e._v("网络： 宿主机网络，NS隔离")])])]),e._v(" "),r("li",[e._v("更敏捷、更灵活\n"),r("ul",[r("li",[e._v("分离的存储和包管理，devops 理念")]),e._v(" "),r("li",[e._v("支持多种网络配置")])])])]),e._v(" "),r("h2",{attrs:{id:"企业级应用"}},[e._v("企业级应用")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("快速交付 与 CICO"),r("br"),e._v("\n企业应用的开发上线流程一般是：代码、构建编译、测试、发布、部署遇到的问题：可能因为环境的问题导致上线延迟，测试不通过等。")]),e._v(" "),r("ul",[r("li",[e._v("快速交付"),r("br"),e._v("\n通过Docker可以大大的提高环境交付的质量和速度，开发人员写好代码之后，交付的不在是一大堆的部署文档，而是一个个的镜像，存储到镜像仓库中。\n运维人员只需要把镜像仓库中的镜像拉取出来即可。保证部署出来的所有应用都是标准的、统一的。即为实现了应用的快速交付。\n应用的开发上线流程")]),e._v(" "),r("li",[e._v("CICD"),r("br"),e._v("\n持续集成和持续部署（Constant Integration Constant Deployment）\n当我们的代码更新时，开发人员可以构建一个新的镜像版本到镜像仓库中，运维人员可以快速的将我们的镜像应用到测试环境、预生产环境以及生产环境。甚至可以通过金Case实现整个更新的自动化，从而实现了持续集成持续部署，实现了应用开发环境的快速迭代。")])])]),e._v(" "),r("li",[r("p",[e._v("云间迁移\n应用容器化之后，对底层环境的要求将大大的降低，应用可以实现从本地数据中心到AWS，阿里云、公有云等迁移")])]),e._v(" "),r("li",[r("p",[e._v("弹性扩展\n企业应用容器化之后，应用的扩展就是拉取镜像部署更多的容器的简单的过程。"),r("br"),e._v("\n我们可以部署相关的监控系统，当发现应用访问慢或者是资源紧张的时候，在弹性扩展的策略下，应用会自动增加相应的容器实例，从而减轻应用访问的压力。当集群中的主机资源不足的时候，还可以使用IaaS接口，自动的增加主机的数量，以便于创建更多的Docker容器。")])])]),e._v(" "),r("Valine")],1)}),[],!1,null,null,null);t.default=a.exports}}]);